name: Continuous Integration
on: [push, pull_request]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]    # Matrix for both Windows and macOS
        configuration: [Debug, Release]
    timeout-minutes: 30

    runs-on: ${{ matrix.os }}

    env:
      Solution_Name: $"WPFW Deel 1".sln                  # Replace with your solution name

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Install .NET Core SDK on both Windows and macOS
    - name: Install .NET Core SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x   # Make sure you're targeting .NET 8.0.x

    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', '**/*.sln', '**/Directory.Build.*') }}
        
    # Set up MSBuild on Windows only
    - name: Setup MSBuild (Windows Only)
      if: runner.os == 'Windows'
      uses: microsoft/setup-msbuild@v2

    # Restore the application (Cross-platform)
    - name: Restore the application
      run: |
        dotnet restore ${{ env.Solution_Name }} --configfile nuget.config /p:Configuration=${{ matrix.configuration }} --verbosity normal
      env:
        Configuration: ${{ matrix.configuration }}

    # Optionally, you can force the installation of the desired version of EF Core Tools
    - name: Install Entity Framework Core Tools version 7.x.x (Example)
      run: |
        dotnet add package Microsoft.EntityFrameworkCore.Tools --version 7.0.10
        dotnet restore
    
    # Execute unit tests (Cross-platform)
    - name: Execute Unit Tests
      run: dotnet test --no-restore --configuration ${{ matrix.configuration }}
